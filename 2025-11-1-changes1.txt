================================================================================
2025-11-01 変更履歴 #1
4足歩行ゴールキーパーロボット - Raspberry Pi OS セットアップ
================================================================================

■ 実施日時
2025年11月1日

■ 概要
Ubuntu OSからRaspberry Pi OSへの移行後、Camera Module 3の初期セットアップを実施


================================================================================
【完了した作業】
================================================================================

1. GitHubリポジトリのクローン
   -------------------------
   リポジトリURL: https://github.com/Elie314159265/Robot2.git
   保存先: /home/worker1/robot_pk

   実行コマンド:
   cd /home/worker1
   rm -rf robot_pk
   git clone https://github.com/Elie314159265/Robot2.git robot_pk


2. Raspberry Pi OS用カメラパッケージのインストール
   ----------------------------------------------
   インストールしたパッケージ:
   - python3-picamera2 (0.3.31-1) ※既にインストール済み
   - python3-opencv (4.10.0+dfsg-5)
   - python3-numpy (1:2.2.4+ds-1)

   実行コマンド:
   sudo apt update
   sudo apt install -y python3-picamera2 python3-opencv python3-numpy


3. Camera Module 3 (IMX708) 設定の追加
   ------------------------------------
   ファイル: /boot/firmware/config.txt

   変更内容:
   [変更前]
   camera_auto_detect=1

   [変更後]
   camera_auto_detect=0
   dtoverlay=imx708

   実行コマンド:
   sudo sed -i 's/camera_auto_detect=1/camera_auto_detect=0/' /boot/firmware/config.txt
   sudo sed -i '/camera_auto_detect=0/a dtoverlay=imx708' /boot/firmware/config.txt

   説明:
   - Camera Module 3はIMX708センサーを使用
   - 自動検出ではなく、手動でデバイスツリーオーバーレイを指定する必要がある
   - これにより、libcameraがカメラを正しく認識できるようになる


4. libcamera-appsのインストール
   ----------------------------
   インストールしたパッケージ:
   - libcamera-apps (1.9.1-1)
   - rpicam-apps及び関連パッケージ

   実行コマンド:
   sudo apt install -y libcamera-apps

   利用可能なコマンド:
   - libcamera-hello / rpicam-hello
   - libcamera-still / rpicam-still
   - libcamera-vid / rpicam-vid


5. カメラ接続確認スクリプトの作成
   ------------------------------
   作成ファイル: scripts/check_camera.py

   機能:
   - picamera2でカメラデバイスの検出確認
   - カメラの初期化テスト
   - カメラプロパティの表示
   - エラー時の診断メッセージ表示


================================================================================
【次にやるべきこと - 必須】
================================================================================

▼ 最優先事項
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Raspberry Piの再起動 ★重要★
   ---------------------------
   config.txtの変更を有効にするため、必ず再起動が必要

   実行コマンド:
   sudo reboot

   理由:
   - dtoverlay=imx708の設定はブート時に読み込まれる
   - 再起動しないとカメラは認識されない


2. カメラ動作確認（再起動後）
   -------------------------

   【方法1】libcamera-helloでプレビュー表示
   コマンド:
   libcamera-hello -t 0
   または
   rpicam-hello -t 0

   期待される動作:
   - カメラのプレビューウィンドウが表示される
   - エラーなく動作する
   - Ctrl+Cで終了


   【方法2】Pythonスクリプトでカメラ確認
   コマンド:
   cd /home/worker1/robot_pk
   python3 scripts/check_camera.py

   期待される出力:
   ✅ カメラが検出されました
   ✅ カメラの設定が完了しました
   ✅ カメラは正常に動作しています！


3. フルカメラテストの実行
   ----------------------
   カメラが正常に認識されたら、Phase 1のテストを実行

   コマンド:
   cd /home/worker1/robot_pk
   python3 tests/test_camera.py

   このテストで確認される項目:
   - カメラの初期化
   - カメラの開始/停止
   - フレームキャプチャ（5秒間、30 FPS目標）
   - コンテキストマネージャー機能
   - カメラ情報の取得

   成功基準:
   - 全テストがPASSED
   - 実際のFPSが30 FPS ± 10%以内
   - フレーム解像度が640x480


================================================================================
【重要な注意事項】
================================================================================

■ ハードウェア接続の確認
  ----------------------
  カメラテスト前に以下を必ず確認:

  1. Camera Module 3がRaspberry Pi 4のCSIポートに物理的に接続されているか
  2. カメラリボンケーブルが両端でしっかり挿入されているか
     - Raspberry Pi側のCSIコネクタ
     - Camera Module側のコネクタ
  3. ケーブルの向きが正しいか
     - 金属端子の向きを確認
     - 通常、青い面がEthernet側を向く

  ※接続後は必ず再起動すること


■ システム情報
  ------------
  OS: Raspberry Pi OS (Debian Trixie base)
  libcamera: v0.5.2+99-bfd68f78
  Python: 3.12
  カメラモジュール: Raspberry Pi Camera Module 3 (IMX708センサー)


■ トラブルシューティング
  ----------------------

  【問題】再起動後もカメラが検出されない
  【対処】
  1. カメラケーブルの接続を再確認
  2. 以下のコマンドでカーネルログを確認:
     dmesg | grep -i "imx708\|camera"

  3. config.txtの設定を再確認:
     cat /boot/firmware/config.txt | grep -E "camera|imx708"

  4. カメラが有効になっているか確認:
     vcgencmd get_camera


  【問題】libcamera-helloコマンドが見つからない
  【対処】
  新しいバージョンではrpicam-helloに名前が変更されています:
  rpicam-hello -t 0


■ sudoパスワード
  --------------
  システムユーザー: worker1
  パスワード: worker1


================================================================================
【今後の開発フェーズ】
================================================================================

現在のフェーズ: Phase 1 - カメラセットアップ

Phase 1完了後の予定:
├─ Phase 2: TPU動作確認
│  - Google Coral TPUのセットアップ
│  - COCOモデルのダウンロード
│  - "sports ball"検出テスト
│
├─ Phase 3: Arduino連携
│  - シリアル通信確立
│  - サーボ制御
│  - 超音波センサー統合
│
├─ Phase 4: リアルタイムボール検出
│
├─ Phase 5: カメラ追従制御（PID制御）
│
├─ Phase 6: 2D位置マッピング
│
├─ Phase 7: 軌道予測
│
└─ Phase 8: 統合テスト


================================================================================
【参考コマンド集】
================================================================================

# カメラデバイスの確認
ls -l /dev/video*

# カメラ設定の確認
cat /boot/firmware/config.txt | grep -E "camera|imx708"

# libcameraのバージョン確認
dpkg -l | grep libcamera

# picamera2のバージョン確認
python3 -c "import picamera2; print(picamera2.__version__)"

# カメラプロパティの取得
python3 -c "from picamera2 import Picamera2; print(Picamera2.global_camera_info())"

# システムログでカメラ関連を確認
dmesg | grep -i camera

# カメラの有効/無効状態確認（古いコマンド、非推奨）
vcgencmd get_camera


================================================================================
【変更ファイル一覧】
================================================================================

[新規作成]
scripts/check_camera.py          カメラ接続確認スクリプト

[変更]
/boot/firmware/config.txt        Camera Module 3用の設定追加


================================================================================
【リポジトリ構成（参考）】
================================================================================

/home/worker1/robot_pk/
├── arduino/                     Arduinoコントローラコード
├── config/                      設定ファイル
├── docs/                        ドキュメント
├── scripts/                     ユーティリティスクリプト
│   └── check_camera.py         ★新規作成
├── src/
│   ├── camera/                 カメラ制御モジュール
│   ├── detection/              TPU推論エンジン
│   ├── tracking/               PID制御
│   ├── positioning/            座標変換
│   ├── prediction/             軌道予測
│   ├── arduino/                Arduino通信
│   └── utils/                  共通ユーティリティ
├── tests/
│   └── test_camera.py          Phase 1テストスクリプト
├── CLAUDE.md                   Claude Code用プロジェクト指示
├── blueprint.txt               全フェーズの詳細設計
├── README.md                   プロジェクト概要
└── requirements.txt            Python依存関係


================================================================================
作成者: Claude Code
最終更新: 2025-11-01
================================================================================
